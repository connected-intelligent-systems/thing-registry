// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Thing {
  id                  String               @id
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  title               String
  description         Json
  owner               String
  types               String[]
  ThingAuthorizations ThingAuthorization[]
  Affordances         Affordance[]
  Targets             Target[]
}

enum AffordanceType {
  property
  action
  event
}

model Affordance {
  id                       String                    @id
  type                     AffordanceType
  description              Json
  name                     String
  types                    String[]
  owner                    String
  source                   String?
  thingId                  String
  Thing                    Thing                     @relation(fields: [thingId], references: [id], onDelete: Cascade)
  AffordanceAuthorizations AffordanceAuthorization[]
}

enum ThingAuthorizationScope {
  read
}

model ThingAuthorization {
  id       Int                     @id @default(autoincrement())
  thingId  String
  entityId String
  scope    ThingAuthorizationScope @default(read)
  Thing    Thing                   @relation(fields: [thingId], references: [id], onDelete: Cascade)

  @@unique([thingId, entityId])
}

enum AffordanceAuthorizationScope {
  execute
}

model AffordanceAuthorization {
  id           Int                          @id @default(autoincrement())
  affordanceId String
  entityId     String
  scope        AffordanceAuthorizationScope @default(execute)
  Affordance   Affordance                   @relation(fields: [affordanceId], references: [id], onDelete: Cascade)
}

model Target {
  thingId     String
  type        AffordanceType
  name        String
  index       Int
  description Json
  owner       String
  Thing       Thing          @relation(fields: [thingId], references: [id], onDelete: Cascade)
  source      String?

  @@id([thingId, type, name, index])
}

model DiscoveredThing {
  id          String   @id
  foundAt     DateTime @default(now())
  description String
  source      String
  owner       String
}

model Discovery {
  user    String  @id
  running Boolean @default(false)
}

model PluginSetting {
  id       Int    @id @default(autoincrement())
  name     String
  owner    String
  settings Json
}
