openapi: "3.0.0"
info:
  title: Thing Description Registry
  version: 0.4.0
servers:
- url: http://localhost:8080/registry
  description: Thing Registry
paths:
  /things:
    get:
      description: Returns all registered thing descriptions
      parameters:
      - in: query
        name: page_size
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 50
        required: false
        description: Limit the number of returned thing descriptions by page
        example: 30
      - in: query
        name: page
        schema:
          type: integer
          example: 1
          minimum: 1
          default: 1
        required: false
        description: Return the page of thing descriptions
      - in: query
        name: resolve
        schema:
          type: boolean
        required: false
        description: Resolve all thing descriptions
        example: false
      - in: query
        name: owner
        schema:
          type: array
          items:
            type: string
            example: test@example.com
        required: false
        description: Filter by owner
      - in: query
        name: type
        schema:
          type: array
          items:
            type: string
            example: iot:PowerMonitoring
        required: false
        description: Type(s) of the thing
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Things"
      security:
        - auth:
          - registry.thing.read
    post:
      description: Creates a new thing description
      requestBody:
        description: Thing description added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThingDescription'
      responses:
        '201':
          description: Successful operation
          headers:
              location:
                schema:
                  type: string
                  description: Location of the new thing description
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatedThing"
        '400':
          description: Invalid description
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
      security:
        - auth:
          - registry.thing.create
  /things/{id}:
    get:
      description: Returns a specific thing description
      parameters:
      - name: id
        in: path
        description: ID of the thing description
        example: uri:urn:6f0685ad-8a08-431a-b700-6dd1a236335b
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/n-triples:
              schema:
                type: string
            application/td+json:
              schema:
                $ref: "#/components/schemas/ThingDescription"
            application/ld+json:
              schema:
                $ref: "#/components/schemas/ThingDescription"
            application/json:
              schema:
                $ref: "#/components/schemas/ThingDescription"
        '404':
          description: Thing description not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - auth:
          - registry.thing.read
    put:
      description: Update a specific thing description
      parameters:
        - name: id
          in: path
          description: ID of the thing description
          example: uri:urn:6f0685ad-8a08-431a-b700-6dd1a236335b
          required: true
          schema:
            type: string
      requestBody:
        description: Updated thing description
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThingDescription'
      responses:
        '200':
          description: Thing description updated
        '400':
          description: Invalid thing description
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"      
        '404':
          description: Thing description not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - auth:
          - registry.thing.update
    delete:
      description: Delete a specific thing description
      parameters:
        - name: id
          in: path
          description: ID of the thing description
          example: uri:urn:6f0685ad-8a08-431a-b700-6dd1a236335b
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Thing description deleted
        '404':
          description: Thing description not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - auth:
          - registry.thing.delete
  /things/{id}/credentials:
    put:
      description: Updates the credentials of thing. Only the owner can update credentials.
      parameters:
        - name: id
          in: path
          description: ID of the thing description
          example: uri:urn:6f0685ad-8a08-431a-b700-6dd1a236335b
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        '200':
          description: Successful operation
      security:
        - auth:
          - registry.thing.credentials 
    get:
      description: Return the credentials of thing. Only the owner can return credentials.
      parameters:
        - name: id
          in: path
          description: ID of the thing description
          example: uri:urn:6f0685ad-8a08-431a-b700-6dd1a236335b
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
      security:
        - auth:
          - registry.thing.credentials
  /things/{id}/access:
    get:
      description: Return information about the permissions and access right of the thing
      parameters:
        - name: id
          in: path
          description: ID of the thing description
          example: uri:urn:6f0685ad-8a08-431a-b700-6dd1a236335b
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThingAccess"
      security:
        - auth:
          - registry.thing.read
  /query:
    get:
      description: Query thing descriptions
      parameters:
      - in: query
        name: jsonpath
        schema:
          type: string
        required: false
        description: A jsonpath query
      - in: query
        name: jsonata
        schema:
          type: string
        required: false
        description: A jsonata query
      - in: query
        name: frame
        schema:
          type: string
        required: false
        description: a jsonld frame
      responses:
        '200':
          description: Returns query result
          content:
            application/json:
              schema:
                type: object
      security:
        - auth:
          - registry.thing.read
  /validate:
    post:
      description: Validates a thing description
      requestBody:
        description: Thing description to validate
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThingDescription'
      responses:
        '201':
          description: Successful operation
        '400':
          description: Thing description is invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
      security:
        - auth:
          - registry.thing.validate
  /permissions:
     get:
      description: Return all permissions of the affordance of a specific user
      parameters:
        - in: query
          name: page_size
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
          required: false
          description: Limit the number of returned permissions per page
          example: 30
        - in: query
          name: page
          schema:
            type: integer
            example: 1
            minimum: 1
            default: 1
          required: false
          description: Number of the page
        - name: thingId
          in: query
          description: Filter by thing id
          example: uri:urn:6f0685ad-8a08-431a-b700-6dd1a236335b
          schema:
            type: string
        - name: entity_name
          in: query
          description: Filter by entity_name
          example: test@example.com
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Permissions"
      security:
        - auth:
          - registry.tickets.read
     post:
      description: Create a new permission for a resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Permission"
      responses:
        '201':
          description: Successful operation
      security:
        - auth:
          - registry.tickets.create
  /permissions/eval:
     get:
      description: Query permissions
      parameters:
        - name: thing_id
          in: query
          description: Filter by thing id
          example: uri:urn:6f0685ad-8a08-431a-b700-6dd1a236335b
          schema:
            type: array
            items:
              type: string
        - name: scope
          in: query
          description: Filter by scope
          example: read
          schema:
            type: array
            items:
              type: string
        - name: property
          in: query
          description: Filter by property
          example: read
          schema:
            type: string
        - name: action
          in: query
          description: Filter by action
          example: read
          schema:
            type: array
            items:
              type: string
        - name: event
          in: query
          description: Filter by event
          example: read
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EvaluatedPermissions"
      security:
        - auth:
          - registry.tickets.read
  /permissions/{id}:
    get:
      description: Return a permission
      parameters:
        - name: id
          in: path
          description: ID of the thing description
          example: uri:urn:6f0685ad-8a08-431a-b700-6dd1a236335b
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Permission"
    delete:
      description: Return all permissions of the affordance of a specific user
      parameters:
        - name: id
          in: path
          description: ID of the permission
          example: fdf488a8-2b27-4353-92a4-05f697e720cc
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
      security:
        - auth:
          - registry.tickets.delete
  /version:
    get:
      description: Returns the version of the registry
      responses:
        '200':
          description: Successful operation
          content:
            application/n-triples:
              schema:
                $ref: '#/components/schemas/ServerVersion'
  /discovery:
    get:
      description: Returns all plugins
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Plugins"
      security:
        - auth:
          - registry.plugin.read
  /discovery/{id}:
    get:
      description: Return a plugin description
      parameters:
        - name: id
          in: path
          description: Name of the plugin
          example: thingsboard-importer
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
      security:
        - auth:
          - registry.plugin.read
  /discovery/{id}/settings:
    get:
      description: Return a plugin description
      parameters:
        - name: id
          in: path
          description: Name of the plugin
          example: thingsboard-importer
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginSettings'
      security:
        - auth:
          - registry.plugin.read
    put:
      description: Update the settings of a plugin
      parameters:
        - name: id
          in: path
          description: Name of the plugin
          example: thingsboard-importer
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginSettings'
      responses:
        '200':
          description: Successful operation
      security:
        - auth:
          - registry.plugin.write
  /discovery/{id}/scan:
    post:
      description: Discover things
      parameters:
        - name: id
          in: path
          description: Name of the plugin
          example: thingsboard-importer
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
      security:
        - auth:
          - registry.plugin.discover
  /inbox:
    get:
      description: Returns a list of discovered things
      parameters:
        - in: query
          name: page_size
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
          required: false
          description: Limit the number of returned things by page
          example: 30
        - in: query
          name: page
          schema:
            type: integer
            example: 1
            minimum: 1
            default: 1
          required: false
          description: Return the page of things
        - name: resolve
          in: query
          description: True if the thing description should resolve
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiscoveredThings"
      security:
        - auth:
          - registry.plugin.discover
  /inbox/{thingId}:
    get:
      description: Returns a discovered thing by ID
      parameters:
        - name: thingId
          in: path
          description: ID of the thing
          example: uri:urn:6f0685ad-8a08-431a-b700-6dd1a236335b
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiscoveredThing"
      security:
        - auth:
          - registry.plugin.discover
  /inbox/{thingId}/approve:
    put:
      description: Import discovered things
      parameters:
        - name: thingId
          in: path
          description: ID of the thing
          example: uri:urn:6f0685ad-8a08-431a-b700-6dd1a236335b
          required: true
          schema:
            type: string
      requestBody:
        description: Discovered things to import
        required: true
        content:
          application/json:
            schema:
              type: array
              description: Array of ids
              example: 
                [
                  "uri:urn:6f0685ad-8a08-431a-b700-6dd1a236335b",
                  "uri:urn:1e81a651-11f2-4614-a29f-1d78c8f2c951",
                ]
              items:
                type: string
                description: ID of a discovered thing
      responses:
        '200':
          description: Successful operation
      security:
        - auth:
          - registry.plugin.discover
components:
  schemas:
    ServerVersion:
      type: object
      properties: 
        version:
          type: string
          description: The version of the registry service
          example: 0.3.5
    CreatedThing:
      type: object
      description: Returns the created thing id
      properties:
        id: 
          type: string
          example: uri:urn:2b504eab-b0c5-46e1-abf2-b849f1b53cbb
      required: 
        - id
    ThingDescription:
      type: object
      description: A valid W3C Thing Description (https://w3c.github.io/wot-thing-description/) 
      example:
        {
          "@context": "https://www.w3.org/2019/wot/td/v1",
          "id": "urn:dev:ops:32473-WoTLamp-1234",
          "title": "MyLampThing",
          "securityDefinitions": {
              "basic_sc": {"scheme": "basic", "in":"header"}
          },
          "security": ["basic_sc"],
          "properties": {
              "status" : {
                  "type": "string",
                  "forms": [{"href": "https://mylamp.example.com/status"}]
              }
          },
          "actions": {
              "toggle" : {
                  "forms": [{"href": "https://mylamp.example.com/toggle"}]
              }
          },
          "events":{
              "overheating":{
                  "data": {"type": "string"},
                  "forms": [{
                      "href": "https://mylamp.example.com/oh",
                      "subprotocol": "longpoll"
                  }]
              }
          }
      }
    Things:
      type: object
      properties:
        page:
          type: integer
          description: The current page number
        pageSize:
          type: integer
          description: The current page size
        totalPages:
          type: integer
          description: The total number of pages
        hasNextPage:
          type: boolean
          description: True if there is a next page
        things:
          type: array
          items:
            $ref: "#/components/schemas/Thing"
    Thing:
      type: object
      description: A summary for a stored thing
      properties:
        id:
          type: string
          description: Unique identifier of the thing
          example: uri:urn:b960ec68-5ef8-4f54-a50c-2a5a347730d1
        title:
          type: string
          description: The title of the ting description
          example: My Example Thing
        description:
          $ref: "#/components/schemas/ThingDescription"
        types:
          type: array
          description: Semantic types of the thing 
          example:
            [
              "iot:BinarySwitchControl",
              "iot:PowerMonitoring"
            ]
          items:
            type: string
            description: Semantic type of a thing
        owner:
          type: string
          description: Name of the owner
          example: household1235@foresight-plattform.de
        href:
          type: string
          format: uri
          description: Link to the full thing description
      required:
        - id
        - title
        - types
        - owner
        - href
    Credentials:
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/BasicCredentials'
          - $ref: '#/components/schemas/BearerCredentials'
          - $ref: '#/components/schemas/ApiKeyCredentials'
    BasicCredentials: 
      type: object
      required:
        - security
        - username
        - password
      additionalProperties: false
      properties: 
        security: 
          type: string
          description: Name of the security definition in the thing description
          example: basic_sc
        username: 
          type: string
          description: Username of the basic authentication
        password:
          type: string
          description: Password of the basic authentication
    BearerCredentials: 
      type: object
      required:
        - security
        - token
      additionalProperties: false
      properties: 
        security: 
          type: string
          description: Name of the security definition in the thing description
          example: bearer_sc
        token: 
          type: string
          description: The bearer token to use
    ApiKeyCredentials:
      type: object
      additionalProperties: false
      properties:
        security: 
          type: string
          description: Name of the security definition in the thing description
          example: api_sc
        apiKey:
          type: string
          description: The api key to use
    DiscoveredThing:
      type: object
      properties:
        id: 
          type: string
          description: id of the discovered thing
          example: uri:urn:c5a6792a-2d7d-4be3-a6b6-9d1f21cf0490
        foundAt:
          type: string
          description: time when the thing was discovered
          example: 2021-03-30T07:06:31.930Z
        title: 
          type: string
          description: title of the discovered thing
          example: MyThing
        types: 
          type: array
          items: 
            type: string
          description: semantic types of the discovered thing
        source:
          type: string
          description: name of the plugin that discovered the thing
          example: thingsboard-importer
        description: 
          $ref: '#/components/schemas/ThingDescription'
    DiscoveredThings:
      type: object
      properties:
        page:
          type: integer
          description: The current page number
        pageSize:
          type: integer
          description: The current page size
        totalPages:
          type: integer
          description: The total number of pages
        hasNextPage:
          type: boolean
          description: True if there is a next page
        things:
          type: array
          items:
            $ref: "#/components/schemas/DiscoveredThing" 
    Plugins:
      type: array
      items:
        $ref: "#/components/schemas/Plugin"
    Plugin:
      type: object
      properties: 
        name: 
          type: string
          description: Type of the plugin
        version:
          type: string
          description: Version of the plugin
          example: 0.0.1
        author:
          type: string
          description: Email of the author
          example: sebastian.alberternst@dfki.de
        description:
          type: string
          description: Description of the plugin
        previewImage:
          type: string
          format: uri
          description: Link to an image for the plugin
        schema:
          $ref: "#/components/schemas/PluginSchema"
        settings:
          $ref: "#/components/schemas/PluginSettings"
    PluginSchema:
      description: A json schema describing the plugin settings 
      type: object
    PluginSettings:
      description: Plugin settings described by the plugin schema
      oneOf:
        - type: string
        - type: number
        - type: integer
        - type: boolean
        - type: array
          items: {}
        - type: object
    Scope:
      type: string
      example: read
      description: a scope for a resources
    Scopes:
      type: array
      description: list of scopes
      example:
        [ "read", "update" ]
      items:
        $ref: "#/components/schemas/Scope"
    ThingAccess: 
      type: object
      properties:
        scopes:
          $ref: "#/components/schemas/Scopes"
        properties:
          type: array
          description: Array of properties with invoke scope
          items:
            type: string
        actions:
          type: array
          description: Array of actions with invoke scope
          items:
            type: string   
        events:
          type: array
          description: Array of event with invoke scope
          items:
            type: string
    Permission:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          description: Id of the permission
          example: d4fdbdd9-a586-4dfc-8858-0cdda8c8d463
        thingId:
          type: string
          description: Target thing of the permission
          example: uri:urn:thing-id
        entityName:
          type: string
          description: Clear name of the entity e.g. email or groupname
          example: test@example.com
        scopes:
          type: array
          description: Name of the resource
          items: 
            $ref: "#/components/schemas/Scope" 
          example: 
            [ "invoke", "read" ]
        properties:
          type: array
          items:
            type: string
        actions:
          type: array
          items:
            type: string
        events:
          type: array
          items:
            type: string
      required:
        - thingId
        - entityName
        - scopes
    Permissions:
      type: object
      properties:
        page:
          type: integer
          description: The current page number
        pageSize:
          type: integer
          description: The current page size
        totalPages:
          type: integer
          description: The total number of pages
        hasNextPage:
          type: boolean
          description: True if there is a next page
        permissions:
          type: array
          items:
            $ref: "#/components/schemas/Permission"
    EvaluatedPermissions:
      type: array
      items:
        type: string
        description: ID of the thing with the evaluated permissions
    Error:
      type: object
      properties:
        status: 
          type: integer
          description: http status
        code: 
          type: string
          description: "error type"
        message: 
          type: string
          description: "Human readable error code"
      required:
        - message
        - code
        - status
    ValidationError:
      allOf:  
        - $ref: '#/components/schemas/Error'
        - type: object
          required:
            - info
          properties:
            info:
              type: array
              items:
                type: object
                properties:
                  keyword: 
                    type: string
                  dataPath: 
                    type: string
                  schemaPath: 
                    type: string
                  params: 
                    type: object
                    properties: 
                      missingProperty: 
                        type: string
                  message: 
                    type: string
  securitySchemes:
    auth:
      type: http
      scheme: bearer
      bearerFormat: JWT