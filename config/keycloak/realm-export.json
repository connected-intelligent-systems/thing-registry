{
  "id" : "foresight",
  "realm" : "foresight",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "295a7ebb-b8c1-422c-a8d0-cd263b5260df",
      "name" : "default-roles-foresight",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "view-profile", "manage-account" ]
        }
      },
      "clientRole" : false,
      "containerId" : "foresight",
      "attributes" : { }
    }, {
      "id" : "8c1e4b5e-9d05-4aec-ad91-e606eb96a293",
      "name" : "foresight:user",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "foresight",
      "attributes" : { }
    }, {
      "id" : "e9c27be1-7804-4cf8-841f-265610418442",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "foresight",
      "attributes" : { }
    }, {
      "id" : "01626751-dffd-4b01-89bc-1cacc63c18f3",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "foresight",
      "attributes" : { }
    } ],
    "client" : {
      "registry" : [ ],
      "realm-management" : [ {
        "id" : "9690af77-2f3b-4833-9be9-f9431e4ebf88",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1fe9e6cd-aecc-43b2-b49c-9c6d9fb6812a",
        "attributes" : { }
      }, {
        "id" : "a846a813-3259-485b-afdc-587ca82ca3a1",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1fe9e6cd-aecc-43b2-b49c-9c6d9fb6812a",
        "attributes" : { }
      }, {
        "id" : "57aec204-8d8a-49d9-be53-6ad8dfcd7789",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1fe9e6cd-aecc-43b2-b49c-9c6d9fb6812a",
        "attributes" : { }
      }, {
        "id" : "07d9d937-de68-4e8a-8d19-9068bfb1c099",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1fe9e6cd-aecc-43b2-b49c-9c6d9fb6812a",
        "attributes" : { }
      }, {
        "id" : "d2518460-3161-43a3-8843-d94c023305bc",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1fe9e6cd-aecc-43b2-b49c-9c6d9fb6812a",
        "attributes" : { }
      }, {
        "id" : "f8092863-4954-4979-8663-dd860bd4c647",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1fe9e6cd-aecc-43b2-b49c-9c6d9fb6812a",
        "attributes" : { }
      }, {
        "id" : "dd8ae138-b071-47b6-ad13-1d1ff844ea28",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "1fe9e6cd-aecc-43b2-b49c-9c6d9fb6812a",
        "attributes" : { }
      }, {
        "id" : "3eac2cfb-4712-429d-a1c7-f504dc76440e",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1fe9e6cd-aecc-43b2-b49c-9c6d9fb6812a",
        "attributes" : { }
      }, {
        "id" : "cf8256e4-1def-4d87-b310-4c3e3d1b5628",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "1fe9e6cd-aecc-43b2-b49c-9c6d9fb6812a",
        "attributes" : { }
      }, {
        "id" : "1d6760fa-3ee1-4bae-99d5-0f7383e9c4f9",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1fe9e6cd-aecc-43b2-b49c-9c6d9fb6812a",
        "attributes" : { }
      }, {
        "id" : "37fb4fea-c1d6-4837-ab70-05b64ff5f631",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1fe9e6cd-aecc-43b2-b49c-9c6d9fb6812a",
        "attributes" : { }
      }, {
        "id" : "85e58045-8814-4337-843d-26fd7d9b4a70",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1fe9e6cd-aecc-43b2-b49c-9c6d9fb6812a",
        "attributes" : { }
      }, {
        "id" : "43629fbf-6794-4e52-bfc7-08be6176c25b",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients", "query-groups", "view-events", "manage-authorization", "view-identity-providers", "manage-users", "view-users", "query-users", "view-clients", "view-authorization", "manage-events", "query-realms", "create-client", "manage-clients", "manage-realm", "impersonation", "view-realm", "manage-identity-providers" ]
          }
        },
        "clientRole" : true,
        "containerId" : "1fe9e6cd-aecc-43b2-b49c-9c6d9fb6812a",
        "attributes" : { }
      }, {
        "id" : "c47a5c7c-841c-45ae-a848-469194d25986",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1fe9e6cd-aecc-43b2-b49c-9c6d9fb6812a",
        "attributes" : { }
      }, {
        "id" : "2fee1353-62e2-44a3-aa58-999445a3146a",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1fe9e6cd-aecc-43b2-b49c-9c6d9fb6812a",
        "attributes" : { }
      }, {
        "id" : "fb94d0d7-d11b-446c-b306-02a3a8b0366e",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1fe9e6cd-aecc-43b2-b49c-9c6d9fb6812a",
        "attributes" : { }
      }, {
        "id" : "fd85b158-9a9d-4082-b1ce-86e772fba55e",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1fe9e6cd-aecc-43b2-b49c-9c6d9fb6812a",
        "attributes" : { }
      }, {
        "id" : "054174bd-7048-48a0-9365-d5bfa391903f",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1fe9e6cd-aecc-43b2-b49c-9c6d9fb6812a",
        "attributes" : { }
      }, {
        "id" : "f72d4ed0-5bf2-4452-a288-4e915d2fb8af",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1fe9e6cd-aecc-43b2-b49c-9c6d9fb6812a",
        "attributes" : { }
      }, {
        "id" : "20af2672-11e4-4b0e-adf1-82b470d4fa7a",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1fe9e6cd-aecc-43b2-b49c-9c6d9fb6812a",
        "attributes" : { }
      } ],
      "dataspace" : [ {
        "id" : "02a8cc15-99d3-4aac-b589-94785a4f5cb8",
        "name" : "admin",
        "description" : "Admin of the dataspace",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "6b2e0053-631d-4e08-b57b-1dd6b3be0e8b",
        "attributes" : { }
      } ],
      "wot-consumer" : [ ],
      "registry-ui" : [ ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "resources" : [ {
        "id" : "20c7fd6e-f4d7-44b2-84ff-46d36319a4ef",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "37933fe0-2438-4dac-a918-c4fcd1e0ec98",
        "attributes" : { }
      } ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "dda21c77-2265-4228-b7a2-fec3a3b6e33a",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "6c03f661-0bad-4419-8f9c-949329ab836f",
        "attributes" : { }
      } ],
      "sparql" : [ ],
      "account" : [ {
        "id" : "9253e3f7-3702-4855-91ba-2b8819f7e3d3",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "062d5e50-f7ec-4e2e-bd55-220f53026fa6",
        "attributes" : { }
      }, {
        "id" : "35a925f9-37c6-4e69-8cf9-614e02ae8e74",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "062d5e50-f7ec-4e2e-bd55-220f53026fa6",
        "attributes" : { }
      }, {
        "id" : "11b457a1-bd26-4095-a6d9-2924f4823c30",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "062d5e50-f7ec-4e2e-bd55-220f53026fa6",
        "attributes" : { }
      }, {
        "id" : "69f56ef5-e93f-405a-919c-cf09b295d90c",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "062d5e50-f7ec-4e2e-bd55-220f53026fa6",
        "attributes" : { }
      }, {
        "id" : "65fba288-a25d-4f17-885a-b9aff1169b6c",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "062d5e50-f7ec-4e2e-bd55-220f53026fa6",
        "attributes" : { }
      }, {
        "id" : "9f4774ad-7c40-434f-9954-21f19d220270",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "062d5e50-f7ec-4e2e-bd55-220f53026fa6",
        "attributes" : { }
      }, {
        "id" : "59036bc6-9d60-4d3e-a3af-4063df0afa1e",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "062d5e50-f7ec-4e2e-bd55-220f53026fa6",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "295a7ebb-b8c1-422c-a8d0-cd263b5260df",
    "name" : "default-roles-foresight",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "foresight"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpSupportedApplications" : [ "FreeOTP", "Google Authenticator" ],
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ {
      "name" : "builtin-default-policy",
      "builtin" : true,
      "enable" : false
    } ]
  },
  "users" : [ {
    "id" : "05044124-c91a-4b41-9200-7a6fb16343e6",
    "createdTimestamp" : 1622551304166,
    "username" : "service-account-dataspace",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "serviceAccountClientId" : "dataspace",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-foresight", "foresight:user" ],
    "clientRoles" : {
      "dataspace" : [ "admin" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "96450546-33f5-481c-9724-0abd1ae172a7",
    "createdTimestamp" : 1612812136200,
    "username" : "service-account-realm-management",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "serviceAccountClientId" : "realm-management",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "uma_authorization", "offline_access" ],
    "clientRoles" : {
      "realm-management" : [ "uma_protection" ],
      "account" : [ "view-profile", "manage-account" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "9f0f5878-7b6f-4b15-99fd-1429b11126f8",
    "createdTimestamp" : 1612810168793,
    "username" : "service-account-resources",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "serviceAccountClientId" : "resources",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "uma_authorization", "offline_access" ],
    "clientRoles" : {
      "resources" : [ "uma_protection" ],
      "account" : [ "view-profile", "manage-account" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "ba4e6a0f-0fd2-41f8-8eff-82ae097c2c6e",
    "createdTimestamp" : 1612809647403,
    "username" : "test.user1@foresight-plattform.de",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : true,
    "email" : "test.user1@foresight-plattform.de",
    "credentials" : [ {
      "id" : "84c6ab66-ff0e-4780-8ad6-6bebbfb7af97",
      "type" : "password",
      "createdDate" : 1612809655143,
      "secretData" : "{\"value\":\"fKa8bMyPJ/DKfmSPsqBB9cfKHCd2mQUJkgaOQ3IGFM1B2EO7l0Ox+TZZx3e8dJtli6JVAwtVEm4+Rkuy2S1mBQ==\",\"salt\":\"9I9UMB93T9PNGM4seniv4A==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "foresight:user", "uma_authorization", "offline_access" ],
    "clientRoles" : {
      "account" : [ "view-profile", "manage-account" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "da1d5bf0-d6fb-41dc-973a-f41a308b40e3",
    "createdTimestamp" : 1612809666991,
    "username" : "test.user2@foresight-plattform.de",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : true,
    "email" : "test.user2@foresight-plattform.de",
    "credentials" : [ {
      "id" : "4938edb7-9800-440f-9adc-ac344a94c84d",
      "type" : "password",
      "createdDate" : 1612809671574,
      "secretData" : "{\"value\":\"0HUBVUFD2DUGVrCrds93N3WnOvt+wC5Zz7680iK1ethY6/j6XRJdBknMCxcN7dnZ8cgyRVTCPRb6Leb9IyzTUg==\",\"salt\":\"z28JHKev97VEW7ZIJOzyFw==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "foresight:user", "uma_authorization", "offline_access" ],
    "clientRoles" : {
      "account" : [ "view-profile", "manage-account" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "2ece6ab0-a4ae-4f08-a8f7-e11a7672e6e5",
    "createdTimestamp" : 1612809684332,
    "username" : "test.user3@foresight-plattform.de",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : true,
    "email" : "test.user3@foresight-plattform.de",
    "credentials" : [ {
      "id" : "67f96d1d-45ef-45b9-b64a-173c116d3d44",
      "type" : "password",
      "createdDate" : 1612809689986,
      "secretData" : "{\"value\":\"DArcfvuqOC0lfl3GVzgmt64RU54t/JMCq8CdAsNsQyj9k32qE/CIQt55zAlXOaW6oX5lDbtuIkY1Hdv+F4p4RQ==\",\"salt\":\"dvR2Plv2+ic9udR74DGdTA==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "foresight:user", "uma_authorization", "offline_access" ],
    "clientRoles" : {
      "account" : [ "view-profile", "manage-account" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account" ]
    } ]
  },
  "clients" : [ {
    "id" : "062d5e50-f7ec-4e2e-bd55-220f53026fa6",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/foresight/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "**********",
    "redirectUris" : [ "/realms/foresight/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "71854cb0-e44b-4000-af57-f7da5c904346",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/foresight/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "**********",
    "redirectUris" : [ "/realms/foresight/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "6da681b7-b212-42d7-ae13-2b084f0d96c9",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "e42768c4-ef92-4d34-9c98-47cdeef20c37",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "**********",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "6c03f661-0bad-4419-8f9c-949329ab836f",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "**********",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "6b2e0053-631d-4e08-b57b-1dd6b3be0e8b",
    "clientId" : "dataspace",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "88ec90c2-eb58-402f-865a-21694a97d82d",
    "redirectUris" : [ "*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "saml.artifact.binding" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml_force_name_id_format" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "0720c9a9-2e00-49b2-846f-faf841594b06",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a62716f1-54f1-4a30-911b-4bd6f2b4f615",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientId",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientId",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "05c8ad92-9721-40e2-be19-caf0494d6438",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "registry.plugin.read", "registry.thing.update", "profile", "roles", "registry.tickets.read", "registry.thing.credentials", "registry.thing.execute", "registry.targets.read", "registry.thing.validate", "registry.tickets.create", "registry.thing.create", "web-origins", "registry.plugin.discover", "registry.tickets.update", "registry.targets.update", "registry.thing.read", "registry.plugin.write", "registry.tickets.delete", "email", "registry.thing.delete" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "1fe9e6cd-aecc-43b2-b49c-9c6d9fb6812a",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "**********",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : true,
    "authorizationServicesEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "a76a2183-2925-4254-b0f8-fc48e76f1a18",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "343ea2d5-95e9-4107-b0a7-8ec273c513f6",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "0ca44657-22cb-4c69-8516-b9a89c013367",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientId",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientId",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ],
    "authorizationSettings" : {
      "allowRemoteResourceManagement" : false,
      "policyEnforcementMode" : "ENFORCING",
      "resources" : [ ],
      "policies" : [ ],
      "scopes" : [ {
        "id" : "c9b47804-7838-4be8-8ea2-9abaab045ac4",
        "name" : "manage"
      }, {
        "id" : "ec07f268-79f7-4d54-b4af-deba51c1ac6c",
        "name" : "view"
      }, {
        "id" : "13c8a36d-2839-422c-ae5f-f713736fbafb",
        "name" : "map-roles"
      }, {
        "id" : "eb40c46e-f6a5-4986-a134-0bb40a5fff28",
        "name" : "map-roles-client-scope"
      }, {
        "id" : "00437d6e-1170-46b4-8986-bd80d5bdee93",
        "name" : "map-roles-composite"
      }, {
        "id" : "9b0a8908-e243-400b-aa0a-fdf738c7924e",
        "name" : "configure"
      }, {
        "id" : "eb84fc43-d96b-4998-aadd-d00ed9160710",
        "name" : "token-exchange"
      } ],
      "decisionStrategy" : "UNANIMOUS"
    }
  }, {
    "id" : "1df9ae70-f313-4ddb-9ad4-fa5220a9ce65",
    "clientId" : "registry",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "**********",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml_force_name_id_format" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "eee36d8c-adb0-478b-86d6-ad4852d95ecf",
    "clientId" : "registry-ui",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "**********",
    "redirectUris" : [ "*" ],
    "webOrigins" : [ "*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml_force_name_id_format" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "9fa40778-d7a1-46b4-9232-2158de2da00e",
      "name" : "Resources Audience",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-mapper",
      "consentRequired" : false,
      "config" : {
        "included.client.audience" : "resources",
        "id.token.claim" : "false",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "false"
      }
    } ],
    "defaultClientScopes" : [ "registry.plugin.read", "registry.thing.update", "profile", "roles", "registry.tickets.read", "registry.thing.credentials", "registry.thing.execute", "registry.thing.validate", "registry.tickets.create", "registry.thing.create", "web-origins", "registry.plugin.discover", "registry.tickets.update", "registry.targets.update", "registry.thing.read", "registry.plugin.write", "registry.tickets.delete", "email", "registry.thing.delete" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "37933fe0-2438-4dac-a918-c4fcd1e0ec98",
    "clientId" : "resources",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "af617399-70e2-42d7-b9db-1563338799c5",
    "redirectUris" : [ "*" ],
    "webOrigins" : [ "*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "authorizationServicesEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml_force_name_id_format" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "3c836719-d666-4dcf-b8e5-09a477d7ebc4",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientId",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientId",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "da08b844-bec8-4345-81e1-60df05cc7fe5",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "1ee3ad58-bd13-4336-a1a9-78f4f4cba276",
      "name" : "resources audience",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-mapper",
      "consentRequired" : false,
      "config" : {
        "included.client.audience" : "resources",
        "id.token.claim" : "false",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "false"
      }
    }, {
      "id" : "50f4afd0-40db-4913-b425-714373635db7",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ],
    "authorizationSettings" : {
      "allowRemoteResourceManagement" : true,
      "policyEnforcementMode" : "ENFORCING",
      "resources" : [ {
        "name" : "urn:vocabulary",
        "ownerManagedAccess" : false,
        "attributes" : { },
        "_id" : "194c9e47-38ed-4287-b3c3-587375743300",
        "uris" : [ ],
        "scopes" : [ {
          "name" : "GET"
        } ]
      }, {
        "name" : "Default Resource",
        "type" : "urn:resources:resources:default",
        "ownerManagedAccess" : false,
        "attributes" : { },
        "_id" : "8b2dc64b-097d-45ff-b080-186a538ca3a0",
        "uris" : [ "/*" ]
      } ],
      "policies" : [ {
        "id" : "8c7f447b-3253-42ef-baff-b0512fba272d",
        "name" : "Default Policy",
        "description" : "A policy that grants access only for users within this realm",
        "type" : "js",
        "logic" : "POSITIVE",
        "decisionStrategy" : "AFFIRMATIVE",
        "config" : {
          "code" : "// by default, grants any permission associated with this policy\n$evaluation.deny();\n"
        }
      }, {
        "id" : "1b15571e-2f7e-4001-82c5-717a01a73cef",
        "name" : "Default Owner Policy",
        "description" : "The owner of the resource has all permissions",
        "type" : "js",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "code" : "var context = $evaluation.getContext();\nvar permission = $evaluation.getPermission();\nvar resource = permission.getResource();\nvar identity = context.getIdentity();\n\nif (identity.id == resource.owner) {\n    $evaluation.grant();\n}"
        }
      }, {
        "id" : "ceceba0a-c0eb-4c98-aa01-7d436af43936",
        "name" : "Default Push Claims",
        "description" : "Push specific claims to the permission",
        "type" : "js",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "code" : "var permission = $evaluation.getPermission();\nvar resource = permission.getResource();\nvar attributes = resource.getAttributes();\n\npermission.addClaim('resourceType', resource.getType());\nif(attributes.thingId !== undefined) {\n    permission.addClaim('thingId', attributes.thingId[0]);\n}\nif(attributes.name !== undefined) {\n    permission.addClaim('name', attributes.name[0]);\n}"
        }
      }, {
        "id" : "904695df-5970-4c28-bd82-db97c04588d2",
        "name" : "Grant Access",
        "description" : "Grants access to a resource",
        "type" : "js",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "code" : "$evaluation.grant();"
        }
      }, {
        "id" : "f2ee7c58-1127-4737-96ec-84f97f122843",
        "name" : "Dataspace Policy",
        "type" : "role",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "roles" : "[{\"id\":\"dataspace/admin\",\"required\":true}]"
        }
      }, {
        "id" : "f1f83726-1ea7-47fa-8138-98bde07b0d63",
        "name" : "Default Permission",
        "description" : "A permission that applies to the default resource type",
        "type" : "resource",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "defaultResourceType" : "urn:resources:resources:default",
          "applyPolicies" : "[\"Default Policy\"]"
        }
      }, {
        "id" : "69bd44ed-99d9-4484-8279-3a62a6ae79ee",
        "name" : "Default Action Permission",
        "description" : "Default permissions for urn:wot:resources:action resources",
        "type" : "resource",
        "logic" : "POSITIVE",
        "decisionStrategy" : "AFFIRMATIVE",
        "config" : {
          "defaultResourceType" : "urn:wot:resources:action",
          "applyPolicies" : "[\"Default Push Claims\",\"Default Owner Policy\"]"
        }
      }, {
        "id" : "c0f73381-1e3b-4621-80e5-acd07e1bd4f9",
        "name" : "Default Event Permission",
        "description" : "Default permissions for urn:wot:resources:event resources",
        "type" : "resource",
        "logic" : "POSITIVE",
        "decisionStrategy" : "AFFIRMATIVE",
        "config" : {
          "defaultResourceType" : "urn:wot:resources:event",
          "applyPolicies" : "[\"Default Push Claims\",\"Default Owner Policy\"]"
        }
      }, {
        "id" : "9f406177-1200-42b6-8321-07b9cf230eee",
        "name" : "Default Property Permission",
        "description" : "Default permissions for urn:wot:resources:property resources",
        "type" : "resource",
        "logic" : "POSITIVE",
        "decisionStrategy" : "AFFIRMATIVE",
        "config" : {
          "defaultResourceType" : "urn:wot:resources:property",
          "applyPolicies" : "[\"Default Push Claims\",\"Default Owner Policy\"]"
        }
      }, {
        "id" : "0a45a851-0a7c-4820-bf34-e45806bd8b00",
        "name" : "All Read Access Vocabulary",
        "type" : "resource",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "resources" : "[\"urn:vocabulary\"]",
          "applyPolicies" : "[\"Grant Access\"]"
        }
      }, {
        "id" : "6e1fcb38-43a7-4143-900e-65f85b6a5471",
        "name" : "Default Thing Permission",
        "description" : "Default permissions for urn:wot:resources:thing resources",
        "type" : "resource",
        "logic" : "POSITIVE",
        "decisionStrategy" : "AFFIRMATIVE",
        "config" : {
          "defaultResourceType" : "urn:wot:resources:thing",
          "applyPolicies" : "[\"Default Push Claims\",\"Default Owner Policy\"]"
        }
      }, {
        "id" : "b17e9173-cb80-45ea-9bc7-d0635eb2b805",
        "name" : "Dataspace Permission",
        "type" : "scope",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "scopes" : "[\"POST\",\"PUT\",\"PATCH\",\"GET\",\"DELETE\"]",
          "applyPolicies" : "[\"Dataspace Policy\"]"
        }
      } ],
      "scopes" : [ {
        "id" : "bb4e520b-5bc3-47d8-a280-e6efd197b951",
        "name" : "PATCH"
      }, {
        "id" : "2e21074f-5ffd-4e8e-ab74-90da7be574bd",
        "name" : "DELETE"
      }, {
        "id" : "4c51a480-371f-433f-a167-55976a772c2a",
        "name" : "GET"
      }, {
        "id" : "2215c625-184c-4ffc-a7e4-5d149d45c39c",
        "name" : "POST"
      }, {
        "id" : "c5646291-ff14-4d60-a9ae-11a81bc2fa52",
        "name" : "PUT"
      } ],
      "decisionStrategy" : "AFFIRMATIVE"
    }
  }, {
    "id" : "8d2bb459-7954-4eb2-9e08-2f0546d6491e",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/foresight/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "**********",
    "redirectUris" : [ "/admin/foresight/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "23a200fd-a2a2-4cf1-a949-527c41b4a054",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "00466119-8f50-4d82-a6e7-3e4857fb433e",
    "clientId" : "sparql",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "1905ca69-889b-4f9c-8d4c-32d2cd6c81e3",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml_force_name_id_format" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "66dc7a5e-d289-4222-8e30-a3468b13994b",
    "clientId" : "wot-consumer",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "35cf0b2c-5817-4ec4-aed1-081342db6d92",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "backchannel.logout.session.required" : "true",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "6a04c16a-328d-4d9f-835d-d2c19bc7b03a",
      "name" : "Resources Audience",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-mapper",
      "consentRequired" : false,
      "config" : {
        "included.client.audience" : "resources",
        "id.token.claim" : "false",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "false"
      }
    } ],
    "defaultClientScopes" : [ "registry.plugin.read", "registry.thing.update", "profile", "roles", "registry.tickets.read", "registry.thing.credentials", "registry.thing.execute", "registry.targets.read", "registry.thing.validate", "registry.tickets.create", "registry.thing.create", "web-origins", "registry.plugin.discover", "registry.tickets.update", "registry.targets.update", "offline_access", "registry.thing.read", "registry.plugin.write", "registry.tickets.delete", "email", "registry.thing.delete" ],
    "optionalClientScopes" : [ "address", "phone", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "2e4c414e-34fb-4ba6-bf72-4e47aec0a384",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "845e8c50-74a1-4636-b960-4d602772df92",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "cdff6828-ca68-4bec-9d3f-ca60129c1c0e",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "933865b0-fc2f-4150-b9ef-b1ed43d6d7c4",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "a4253409-1e08-464c-9563-81f28b8bf167",
    "name" : "registry.tickets.create",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "82b121fb-1a57-403c-9951-28181a09fa15",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "b3d91e70-5986-4fe1-84b2-c9e49761eeb9",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e5ef0194-1eb9-470b-9e49-7b1047cf458f",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "32be9ee8-8dc8-4017-b877-03d5b6effe18",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "6e28fc83-9db4-45e6-be1c-f11d81540d79",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "38ba461f-eafd-447b-9f8d-2e8b2eaac784",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f83e4735-2ee9-485a-8fb9-2ccb6d12a209",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "79f046f9-786f-4551-9a39-fe1726219e08",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3eb2eaba-ea8f-44b5-946a-223034217549",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "56dae797-4b8c-426b-8e09-60a7b4a2711d",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "12550bbf-b919-43c5-9888-5825d4ab674a",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9d4a254e-bb93-44b5-bdf8-09779baaddb7",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9b15a0ae-7ad1-4d36-bb10-6a4c6915d4a0",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7d8f61b5-588c-4564-8aae-65baae587145",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "4819805f-5671-4ec0-9677-734525502de7",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "83c39130-8bd0-42ea-a685-589819aa1c94",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "b9a0d12f-603b-45b8-9a54-a812550987f0",
    "name" : "registry.targets.update",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "1a24d30d-6d80-48b2-97d0-9ee975874c53",
    "name" : "registry.plugin.read",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "ac96b90a-67c8-4016-9e6b-173fae1a488f",
    "name" : "registry.thing.read",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "6fc09525-7d36-4c8f-a2bc-19661b624235",
    "name" : "registry.thing.delete",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "87156e7e-3b8b-41da-ac02-e6267ffc64d6",
    "name" : "registry.thing.execute",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "d88b3edb-eef7-4e26-892b-708dbcc17a1e",
    "name" : "registry.targets.read",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "4f568249-3151-4ef0-93ac-843194924b8e",
    "name" : "registry.thing.validate",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "9e08360e-2892-452c-9d6d-1ec974eaceb6",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "a05d822c-e3b7-44b6-8f5b-f936c9ae5fef",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "d1dcdbf6-0aef-4d62-8a20-6a8173dac863",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "5141b741-1604-435d-a950-d05e063c8c6b",
    "name" : "registry.tickets.read",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "4d7fa351-c254-42a7-9aaa-96a151268400",
    "name" : "registry.plugin.discover",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "86bbdc7d-cb5a-4515-a4b3-b3d04597f991",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "3d180fd2-3506-4396-85bf-770d8009bb88",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "3af7f5ad-0229-42ca-bd64-92ccb3c74015",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "3d2481f2-716e-4605-8ea7-82fc5c1c5ea9",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "1a242668-279e-48bf-b65f-8f2b4b3ce54d",
    "name" : "registry.thing.update",
    "description" : "",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "bd62c170-1e44-4cf0-8907-f9cf3f48494f",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "347bf1e5-c7aa-43f0-a191-f995e6bb1a61",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "4e7e8c9c-2eb4-43c4-a694-6c32be461c50",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "86deb313-85ef-476b-b60f-197ddb94fb85",
    "name" : "registry.plugin.write",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "a82ec847-ae6b-477c-9462-4af6fa901d4b",
    "name" : "registry.thing.create",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "16421c57-7566-4a91-b8fc-df0ab1d74a14",
    "name" : "registry.tickets.update",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "3ab784e7-bb10-4c5b-b402-bdc71a25573a",
    "name" : "registry.thing.credentials",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "41d1bf3b-831d-42a0-9201-9977a20b8834",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "c56a55a5-0e10-4744-95ed-19cbc4cce37a",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "1130dea9-18eb-470a-a128-55f587c0029e",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "55704ea6-0255-4b5f-b611-c77adefaf9cb",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "16d1cce9-c18a-43c1-ad3f-a07e5f15063e",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "cea022fa-d5e2-4819-9e26-299afe9e0c9f",
    "name" : "registry.tickets.delete",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    }
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "profile", "roles", "email", "web-origins" ],
  "defaultOptionalClientScopes" : [ "phone", "address", "offline_access", "microprofile-jwt" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "26382fdd-0efd-405c-9f06-f9c31e8139b5",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "d3cf0310-4320-414e-a6c1-4aab755e924b",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "d756c4c5-cf29-4338-8563-ca90265b7c37",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "a603287a-609a-400d-a570-06bcfead3e2b",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "a8eb9503-20a9-4132-93e9-b24494ce208b",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-usermodel-property-mapper", "oidc-full-name-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-attribute-mapper", "oidc-address-mapper", "saml-role-list-mapper", "saml-user-property-mapper", "saml-user-attribute-mapper" ]
      }
    }, {
      "id" : "f1928e32-f058-48f2-9b9b-28c1e604b935",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "57324f7d-534a-47b6-99a8-f51b3d177eac",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "6db3656f-dbdb-49e1-a69f-566de528ba78",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-usermodel-attribute-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-address-mapper", "saml-user-attribute-mapper", "oidc-usermodel-property-mapper", "saml-role-list-mapper", "oidc-full-name-mapper", "saml-user-property-mapper" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "4a6513bc-0209-4f3e-adf8-7cc7d3564d68",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEA0wVyVKf2Oc8jDJRM0ogdxiGU7tGtdw/bYbmgu6CZN0WxTL2OQ9JxaBbT0lnosHriY5WljWAYs/j42RGZfBo5I0I66s0p8hqTjsSgEZ0Iz4hivNRQ91waNSn3BEf25zH4SjQjOAr3CJXXGwF8TUs1AzQhfz1GEcOnDVxmv1x2hzQ/rzTIse5SQlVEGkA16pFQHcTPRa3B2rEblLCcnz9cBWlbKQwE0MyU9bqI6icm9htceBJAMLivXYD7OuZiLgBo3M2KyjsVX+NEiCuO3CVj+dQkl3kNd4UxOfhhS59koeKcPCbuUm65JhfnUuMbI2DdJB++ibv4ZXL9P0Kl94DcFwIDAQABAoIBADeARjrX1l4MCebkFnSFEnerG3XYtiwLgqLoZMsUiVfNP720WXejIOrEnj/EH/xSxbp1gI53iOfFAwZsp5bJet+4KrDY90BTFx5EvukDCW80KuwJV6ZHlikHeY2ps9nI/cnefqjd0W1zo5jZwiy+LBpEms7Red1wPT65X9jS4+XZMKxT9RGJT4hmPaFPEkjJ5Im4Dio0Q0CgEaagveg2UBoHFCgr6TGmdK+vHUpiV4qPbqMjeSP0KDG4eb9vyILy9XcPo3ewOQsF/rNjNrcK1FqmsRoPrwbjCFJ09bFZVDHuZZWWVVxpnq7Nbh5KE1eh7g+XBoM6U9a4nAmpQ1973CECgYEA9ymjjE0LdvRtf0NNdrLj/dsZ+UdiCwZ/WRlJXZeq7beBKxdToMsW8kQUF9Zf3DTIaEqSWzn9Cgnfd7yVMk/iyROPtwncX5Gd9xawdwDpVrBE2GGINMcvWtmSUtoVyJbFXCaKPVqyTKQb4u8kr3jLb/Kzg5IFQh3kzXFJFgquzfECgYEA2pD+a5XvmTQRDm/WOQTaBTNJdF5o+vDWswprh8oEFPN0/qOIsjz+Ng0Ycbz5r2g2u4ZL9B8Brz/ePE9oSEIbEEIeWTCUZ0BFuPMX8PSus6KJOhwtGUkZiT55GBuAOuEW/XWo4qaSReqkqQLGEx/ZaFvHW/q3VbZq0Dq624Y8YocCgYBq0dAhPtsJmjIIomnENyRZ/muHVNaGtVQsicUvcfEps/lbSkWWZK+SHOIiO0BKx3UlvbTrQHCf+gxej15b1DLLfGzMSrK3ixOeSmwRwo8WLDBU5DIdvUg2F3op3J81hhPd87ojMiOFBBgZSAmu3KHvzBDReDZVkN3l/GP95rgNwQKBgC6VWKR1gGuWvUvmajIc5prVI4K53IYfbqMaRXDbjaMpgHYFRM04UrYSdHNJY64O+BtftDCDq0g+xI72HbPI4xvD+9Pmlrqq6DFTHncsr096BOVtu+73tYma1xRcSChEcTH0MdqcxfBA4ndjL/RDhYLIjOT9urV5+6oF2m2PXq9hAoGBAMUwmiHNt8wefih3PHu3waq5hRQ5BiRz6/xbPCF2PUUXRbrLrmtP8QUYNujGEe0NjFBeLq7pcStGgbXzk7vGkYkW8lliBRWAwlAFN7ZIVXMaTrsUuzX1sNvFibWrphUHSbakyYG6ZJbUPd5+X3UvkjFOgzva2DOwmE4m6aMDxtY3" ],
        "certificate" : [ "MIICoTCCAYkCBgF3gubbYzANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlmb3Jlc2lnaHQwHhcNMjEwMjA4MTgyNjQzWhcNMzEwMjA4MTgyODIzWjAUMRIwEAYDVQQDDAlmb3Jlc2lnaHQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDTBXJUp/Y5zyMMlEzSiB3GIZTu0a13D9thuaC7oJk3RbFMvY5D0nFoFtPSWeiweuJjlaWNYBiz+PjZEZl8GjkjQjrqzSnyGpOOxKARnQjPiGK81FD3XBo1KfcER/bnMfhKNCM4CvcIldcbAXxNSzUDNCF/PUYRw6cNXGa/XHaHND+vNMix7lJCVUQaQDXqkVAdxM9FrcHasRuUsJyfP1wFaVspDATQzJT1uojqJyb2G1x4EkAwuK9dgPs65mIuAGjczYrKOxVf40SIK47cJWP51CSXeQ13hTE5+GFLn2Sh4pw8Ju5SbrkmF+dS4xsjYN0kH76Ju/hlcv0/QqX3gNwXAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAAkiOLU+hvG6/OE/+FNnerXGnGtCHamFVCYUcEuEyyz6gB6zzvZ8/ZZZo8YTgcUsdupykQ5JXehNHXsDYbJyHZeaE1tMqL0WQk9O955/9JUd/mCygMwwZOg4gfIoforYVBm9GIyK3PXkMTS7Z5IGY+QEy9tu7jJ4LfMeW7OgLy7yN527rfWXNXzold83ziXF/yZO+P/PT7pnTdja2FUTYc7VIX7/NyOu8q9whJi9ATnIyQkOnYaEWKfdUgEAcsva0jU9xxbEt3NPQ7sSvZQTdbUBaPLPWpgTFsDh6H0BRiLio7iqMNXSFwhp93VMllgwxaN1t6hCVNatZJ+sI0K0SdM=" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "d8c6ce40-7e56-4250-94d2-98c30c15f1cc",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "a8f7ea6a-15ab-4eb1-a2fa-802a8da40c4a" ],
        "secret" : [ "KU__49ckeH7o43en0BhF_w" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "10a30d41-0824-434e-85ab-934550d3f616",
      "name" : "hmac-generated",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "db6a3174-19e5-4298-a242-a486dab1df36" ],
        "secret" : [ "d7CEYmMKUUAwPQ59Uk-DrVuGfoA9RqYsSZf6oE3EiruU7Bp6YnaXqI18vldBtgJ99YvfTejyaRuMfxbZhDP94Q" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS256" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "8a668259-69a1-4398-a0da-01269fc1f2d4",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "a9fe12c3-46c7-443f-9927-bb351aa9ae47",
    "alias" : "Authentication Options",
    "description" : "Authentication options.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "basic-auth",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "basic-auth-otp",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 30,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "ca711a98-b291-4187-bbac-8e383fbe927f",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "9fd6fb31-9d5a-4eb1-89ee-74327c4226b8",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "b8e2b573-26e9-44e1-9d5e-6067ba2f83cf",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "216f5390-c236-46f7-86e9-f737ea690a5c",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "bbb4c07c-ab6c-408a-8d5b-27ad56817509",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "41f56e31-0891-4726-b498-35753df565f3",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "00b385e8-59a9-4f2d-8fa3-ec9345bc2266",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "8fee3734-5306-472f-a906-7298f71c8653",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "flowAlias" : "forms",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "4cc60a32-a405-493d-b930-b48951bf49fa",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "362bc589-3f8b-4809-a042-c021a389152c",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "715f71fd-e740-4412-b3f8-809492d6a0bf",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "6e6fb37c-b808-480a-b84d-1af3611016bc",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "53d5bab8-8fab-4325-b89a-9d46f4e0cb67",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "4577d03a-0a34-485c-8c89-4f0b9633ca45",
    "alias" : "http challenge",
    "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "no-cookie-redirect",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "flowAlias" : "Authentication Options",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "eafb85d0-9d42-44e7-a849-1cdf5cd8b8a1",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "4d3442ed-9740-47e0-a28a-6f12ec294957",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-profile-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 40,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "fb7c4cb6-e96b-4364-8e71-bf9e64c0470b",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "6a03ea65-18e8-4d50-a672-65fd088504ea",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "18e9522e-30bd-472f-982d-2e265d146d76",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "b29e30c9-9355-4c79-aac4-a508203e2645",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "terms_and_conditions",
    "name" : "Terms and Conditions",
    "providerId" : "terms_and_conditions",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "clientOfflineSessionMaxLifespan" : "0",
    "oauth2DevicePollingInterval" : "5",
    "clientSessionIdleTimeout" : "0",
    "clientSessionMaxLifespan" : "0",
    "clientOfflineSessionIdleTimeout" : "0",
    "cibaInterval" : "5"
  },
  "keycloakVersion" : "13.0.1",
  "userManagedAccessAllowed" : false
}